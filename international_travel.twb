<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Dataset US international travel' inline='true' name='federated.0639r4w1y78hnh17p192a0d10jf6' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset US international travel' name='textscan.1lcf7tp145iyxj1czaldb1fs46m6'>
            <connection class='textscan' directory='C:/Users/sjsa3/Downloads/Only_once/DataSchool' filename='Dataset US international travel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lcf7tp145iyxj1czaldb1fs46m6' name='Dataset US international travel.csv' table='[Dataset US international travel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Month' ordinal='2' />
            <column datatype='string' name='DoW' ordinal='3' />
            <column datatype='string' name='Airport Code' ordinal='4' />
            <column datatype='string' name='Foriegn Airport code' ordinal='5' />
            <column datatype='string' name='Airline code' ordinal='6' />
            <column datatype='string' name='Airline' ordinal='7' />
            <column datatype='integer' name='Domestic US airline' ordinal='8' />
            <column datatype='string' name='US State' ordinal='9' />
            <column datatype='string' name='US City' ordinal='10' />
            <column datatype='string' name='US Airport name' ordinal='11' />
            <column datatype='string' name='World Region' ordinal='12' />
            <column datatype='string' name='Foreign country' ordinal='13' />
            <column datatype='string' name='Foreign city' ordinal='14' />
            <column datatype='string' name='Foreign Airport name' ordinal='15' />
            <column datatype='integer' name='Scheduled_departures' ordinal='16' />
            <column datatype='integer' name='Chartered_departures' ordinal='17' />
            <column datatype='integer' name='Scheduled_seats' ordinal='18' />
            <column datatype='integer' name='Chartered_seats' ordinal='19' />
            <column datatype='integer' name='Scheduled_passengers' ordinal='20' />
            <column datatype='integer' name='Chartered_passengers' ordinal='21' />
            <column datatype='integer' name='Scheduled_freight' ordinal='22' />
            <column datatype='integer' name='Chartered_freight' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DoW</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DoW]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>DoW</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport Code]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Airport Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foriegn Airport code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foriegn Airport code]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Foriegn Airport code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline code]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Airline code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic US airline</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Domestic US airline]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Domestic US airline</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[US State]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>US State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[US City]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>US City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Airport name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[US Airport name]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>US Airport name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[World Region]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>World Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foreign country]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Foreign country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foreign city]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Foreign city</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign Airport name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foreign Airport name]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Foreign Airport name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scheduled_departures</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scheduled_departures]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Scheduled_departures</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chartered_departures</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Chartered_departures]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Chartered_departures</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scheduled_seats</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scheduled_seats]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Scheduled_seats</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chartered_seats</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Chartered_seats]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Chartered_seats</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scheduled_passengers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scheduled_passengers]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Scheduled_passengers</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chartered_passengers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Chartered_passengers]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Chartered_passengers</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scheduled_freight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scheduled_freight]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Scheduled_freight</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chartered_freight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Chartered_freight]</local-name>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias>Chartered_freight</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dataset US international travel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Route Identification' datatype='string' name='[Calculation_1257067309904633856]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Foriegn Airport code]+&apos;_&apos;+[Airport Code]' />
      </column>
      <column caption='Chartered departures' datatype='integer' name='[Chartered_departures]' role='measure' type='quantitative' />
      <column caption='Chartered freight' datatype='integer' name='[Chartered_freight]' role='measure' type='quantitative' />
      <column caption='Chartered passengers' datatype='integer' name='[Chartered_passengers]' role='measure' type='quantitative' />
      <column caption='Chartered seats' datatype='integer' name='[Chartered_seats]' role='measure' type='quantitative' />
      <column caption='Do W' datatype='string' name='[DoW]' role='dimension' type='nominal' />
      <column datatype='string' name='[Foreign city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Foreign country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Scheduled departures' datatype='integer' name='[Scheduled_departures]' role='measure' type='quantitative' />
      <column caption='Scheduled freight' datatype='integer' name='[Scheduled_freight]' role='measure' type='quantitative' />
      <column caption='Scheduled passengers' datatype='integer' name='[Scheduled_passengers]' role='measure' type='quantitative' />
      <column caption='Scheduled seats' datatype='integer' name='[Scheduled_seats]' role='measure' type='quantitative' />
      <column datatype='string' name='[US City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[US State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Chartered_passengers]' derivation='Sum' name='[sum:Chartered_passengers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Scheduled_departures]' derivation='Sum' name='[sum:Scheduled_departures:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.570957' measure-ordering='alphabetic' measure-percentage='0.429043' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0639r4w1y78hnh17p192a0d10jf6].[sum:Chartered_passengers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0639r4w1y78hnh17p192a0d10jf6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0639r4w1y78hnh17p192a0d10jf6].[sum:Scheduled_departures:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='DoW' />
        <field-sort-custom-order field='Airport Code' />
        <field-sort-custom-order field='Foriegn Airport code' />
        <field-sort-custom-order field='Calculation_1257067309904633856' />
        <field-sort-custom-order field='Airline code' />
        <field-sort-custom-order field='Airline' />
        <field-sort-custom-order field='Domestic US airline' />
        <field-sort-custom-order field='US State' />
        <field-sort-custom-order field='US City' />
        <field-sort-custom-order field='US Airport name' />
        <field-sort-custom-order field='World Region' />
        <field-sort-custom-order field='Foreign country' />
        <field-sort-custom-order field='Foreign city' />
        <field-sort-custom-order field='Foreign Airport name' />
        <field-sort-custom-order field='Scheduled_departures' />
        <field-sort-custom-order field='Chartered_departures' />
        <field-sort-custom-order field='Scheduled_seats' />
        <field-sort-custom-order field='Chartered_seats' />
        <field-sort-custom-order field='Scheduled_passengers' />
        <field-sort-custom-order field='Chartered_passengers' />
        <field-sort-custom-order field='Scheduled_freight' />
        <field-sort-custom-order field='Chartered_freight' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataset US international travel' name='federated.0639r4w1y78hnh17p192a0d10jf6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0639r4w1y78hnh17p192a0d10jf6'>
            <column datatype='string' name='[Airport Code]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Foreign Airport name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Foreign country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Foriegn Airport code]' role='dimension' type='nominal' />
            <column caption='Scheduled passengers' datatype='integer' name='[Scheduled_passengers]' role='measure' type='quantitative' />
            <column-instance column='[Airport Code]' derivation='None' name='[none:Airport Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Foreign Airport name]' derivation='None' name='[none:Foreign Airport name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Foreign country]' derivation='None' name='[none:Foreign country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Foriegn Airport code]' derivation='None' name='[none:Foriegn Airport code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scheduled_passengers]' derivation='Sum' name='[sum:Scheduled_passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0639r4w1y78hnh17p192a0d10jf6].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0639r4w1y78hnh17p192a0d10jf6].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0639r4w1y78hnh17p192a0d10jf6].[Longitude (generated)]' field-type='quantitative' max='3175446.8423812762' min='-23608984.695056196' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0639r4w1y78hnh17p192a0d10jf6].[Latitude (generated)]' field-type='quantitative' max='16858790.679057777' min='-2252895.5073441416' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <size column='[federated.0639r4w1y78hnh17p192a0d10jf6].[sum:Scheduled_passengers:qk]' />
              <lod column='[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foreign Airport name:nk]' />
              <lod column='[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foreign country:nk]' />
              <lod column='[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foriegn Airport code:nk]' />
              <lod column='[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Airport Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0639r4w1y78hnh17p192a0d10jf6].[Latitude (generated)]</rows>
        <cols>[federated.0639r4w1y78hnh17p192a0d10jf6].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.75' source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0639r4w1y78hnh17p192a0d10jf6].[sum:Scheduled_passengers:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Airline code:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Airport Code:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foreign Airport name:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foreign city:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foreign country:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Foriegn Airport code:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:Month:qk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[none:World Region:nk]</field>
            <field>[federated.0639r4w1y78hnh17p192a0d10jf6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
